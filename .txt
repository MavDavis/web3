Web3 is decentralized application
it ensures security and that people are totally involved and aware of the service that they use.
it also makes web flow faster.
we will set up a new Ethereum wallet



created a new folder
git init
yarn init -y (check what -y is)
yarn add -D hardhat
npx hardhat  -  and we selected the hardhat.config.js
we created a .gitignore file and added node_modules to it 

we installed couple packages that can assist hardhat to create a contract, we also installed some packages for testing,convereted our js files to typescripts
we ran the command for testing after we created a testing file for helloWorld, and it passed. PS: I learnt that the change or updates made to the packages from when the video was made till real time is a lot. so it will be advisable to stay up to date.'



yayyyyyyy, I learnt something today. So, I asked gpt why we had to yarn add hardhat to our dev dependencies, and npx it afterwards, and I got to understand that node package execution (npx) doesn't just install a package but executes it as well- so when you run npx on a package, it checks the availability of that package and either installs or spin it up depending on whether it is available or not. It got me wondering why then do we have to yarn add if npx does both, and I learnt that npx doesn't add to your node_modules, it just caches it in an npm/npx folder for a while depending on the expiry date on it and can even fetch an updated package if the package has a new release which can cause conflict on your codebase cos of dependencies and version issues.